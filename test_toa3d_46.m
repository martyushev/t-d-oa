m = 4; % number of senders
n = 6; % number of receivers
Sgt = rand(3,m); % ground truth senders
Rgt = rand(3,n); % ground truth receivers

% 14 real solutions
%Sgt = [0.825589728871554 0.149424080991961 0.903207471120771 0.898648522665758; 0.967500591392957 0.110049858095108 0.251981060326425 0.881367781266072; 0.631712292318899 0.974945539483217 0.299234753738806 0.293526660015939];
%Rgt = [0.783525915864237 0.447445183865864 0.743174377987002 0.383851757358266 0.816544591653289 0.550662852681585; 0.812528153188130 0.100239236192005 0.690442669165578 0.659473263770078 0.880686416118360 0.075866223576011; 0.215087328269059 0.120315554997518 0.280133368362977 0.998645336641393 0.819488667043918 0.011513340567055];

D = zeros(n,m); % squared distances
for i = 1:m
    for k = 1:n
        D(k,i) = (Sgt(:,i)-Rgt(:,k))'*(Sgt(:,i)-Rgt(:,k));
    end
end

tic;
[Se,Re] = solver_toa3d_46(D);
tm = toc;

err = error_toa(Se,Re,Sgt,Rgt);

for i = 1:size(Se,3)
    fprintf('%s%d:\n', 'Solution #', i);
    disp([Se(:,:,i), Re(:,:,i)]);
end
fprintf('%s%g\n', 'Error: ', err);
fprintf('%s%.2f%s\n', 'Time: ', 10^3*tm, ' ms');